/**
 * convertapi
 * Convert API lets you effortlessly convert file formats and types.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.5
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/DocxTableTableFillTableRow'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./DocxTableTableFillTableRow'));
  } else {
    // Browser globals (root is window)
    if (!root.CloudmersiveConvertApiClient) {
      root.CloudmersiveConvertApiClient = {};
    }
    root.CloudmersiveConvertApiClient.DocxTableTableFillRequest = factory(root.CloudmersiveConvertApiClient.ApiClient, root.CloudmersiveConvertApiClient.DocxTableTableFillTableRow);
  }
}(this, function(ApiClient, DocxTableTableFillTableRow) {
  'use strict';




  /**
   * The DocxTableTableFillRequest model module.
   * @module model/DocxTableTableFillRequest
   * @version 2.7.4
   */

  /**
   * Constructs a new <code>DocxTableTableFillRequest</code>.
   * Request to update data in a table in a Word DOCX Document
   * @alias module:model/DocxTableTableFillRequest
   * @class
   */
  var exports = function() {
    var _this = this;






  };

  /**
   * Constructs a <code>DocxTableTableFillRequest</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DocxTableTableFillRequest} obj Optional instance to populate.
   * @return {module:model/DocxTableTableFillRequest} The populated <code>DocxTableTableFillRequest</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('InputFileUrl')) {
        obj['InputFileUrl'] = ApiClient.convertToType(data['InputFileUrl'], 'String');
      }
      if (data.hasOwnProperty('InputFileData')) {
        obj['InputFileData'] = ApiClient.convertToType(data['InputFileData'], 'Blob');
      }
      if (data.hasOwnProperty('TableStartTag')) {
        obj['TableStartTag'] = ApiClient.convertToType(data['TableStartTag'], 'String');
      }
      if (data.hasOwnProperty('TableEndTag')) {
        obj['TableEndTag'] = ApiClient.convertToType(data['TableEndTag'], 'String');
      }
      if (data.hasOwnProperty('DataToFillIn')) {
        obj['DataToFillIn'] = ApiClient.convertToType(data['DataToFillIn'], [DocxTableTableFillTableRow]);
      }
    }
    return obj;
  }

  /**
   * Optional; Input URL of the document; use BeginEditing to create this
   * @member {String} InputFileUrl
   */
  exports.prototype['InputFileUrl'] = undefined;
  /**
   * Optional; Input Word Document file content for the operation
   * @member {Blob} InputFileData
   */
  exports.prototype['InputFileData'] = undefined;
  /**
   * Start tag that delineates the beginning of the table
   * @member {String} TableStartTag
   */
  exports.prototype['TableStartTag'] = undefined;
  /**
   * End tag that delineates the end of the table
   * @member {String} TableEndTag
   */
  exports.prototype['TableEndTag'] = undefined;
  /**
   * Data set to populate the table with
   * @member {Array.<module:model/DocxTableTableFillTableRow>} DataToFillIn
   */
  exports.prototype['DataToFillIn'] = undefined;



  return exports;
}));


